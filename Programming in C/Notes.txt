ER diagram 
DFD 
Use diagram


git  repository ->
Assignment -> C 
		Class Task ->
		C++
		SQL
		Java
		PHP

Assessment 

Project--> 

C Programming ---> installation Dev C ++
	
Structure 
1. header 
2. main
3 logic

#include<stdio.h>
int main()
{
	printf("Hello World");
}


Data Types and variables 

Variables - values are not fixed/indentifier  e.g name = 

PI 

sum of 2 numbers 
10+20 = 30

12.23+10 = 

23.45+56.67 = 

name= "dharmishtha"
name="Test"
variable 
	num1,num2 
variable 
	name

Data type / which types of holds variables 

PHP
Python
Java

Numeric  int,long,short
decimal  float,double
String   character array
Boolean  True/False

add 2 numbers 

comments - For documentation / Non executable part of your program

2 types 
	1. Single line
		//
	2. multiline 
		/* 
		*/


declare 5 variables and initilize 
with diffrent values and add 100 to these variables 
shows the output


18th Aug

conditional statements --->if-else , if ... else if
ternary operator

loops --->repetition 
	entry control loop/exit control loop
	-->for  / entry control loop
		
		for(intilization;condition;increment/decrement)
		
		for(i=1;i<=10;i++)
		{
			printf("Hello");
		}	
	factorial number = 10
	10*9*8*7*6*5*4*3*2*1 = 
	
factorial number = 5
	5*4*3*2*1 = 

fibonacci series

add 2 preccedding number

0 , 1 , 1 , 2 , 3 , 5 , 8 , 13 

num= 5 
0 , 1 , 1 , 2 , 3

num=7

0 , 1 , 1 , 2 , 3 , 5 , 8


APS =a + (n - 1)d, where 'a' is the first term, 'n' is the number of terms, and 'd' is the common difference between consecutive terms

a=2
n=5
d=2

1st = 2+(5-1)*2 =2+4*2 = 2+8 = 10


Multilication Table

5 * 1 =5
5 * 2 =10
5 * 3 =15
....
5 * 10 =50

for(i=1;i<=10;i++)
{
	ans = num*i;
	printf("%d",ans);
}

	-->while / entry control loop
	--> do .. .while / exit control loop

____________________________________________________

20th Aug
	for  - syntax,examples,usage
		for(init;cond;incre/decrement)

	while - while(condition)
		{
			stmt
		}

	i=8;
	j=++i;
	j=9
	i=9
	
	i=8;
	j=i++;
	j=8;
	i=9;

	do
	{
		stmt
	}while(condition);
	
	
	for(initilization;condition;increment/decrement)
	//print 1-10

	for(i=1;i<=10;i++)
	{
		printf("%d",i);
		STMT...
	}
	//print 10-1
	for(i=10;i>=1;i--)
	{
		printf("%d",i);
	}

	5*1=5
	5*2=10
	5*3=15
	...
	5*10=50
	
	int mul=1,i;

	for(i=1;i<=10;i++)
	{
		mul=5*i;
		printf("%d * %d = %d",5,i,mul);
	}

	

factorial number
fibonacci series 
0 1 1 2 3 5 8 
 	iteration 1
		pre = 0
		next =1
		sum=pre+next
	iteration 2
		pre = next
		next =sum
		sum=pre+next
	iteration 3
		pre = next
		
sum=pre+next
	
fibonacci series with while and do

number=231234
output = 6
o/p= 15

number=109
o/p = 3
o/p=10

number=12
o/p=2
o/p =3

loop
/
%

22ng Aug

no_of_digit === num=5476
		num=68794


num%10 = 5476%10
	6

num/10 = 547

num%10 = 547%10
	7
num/10 = 547/10
	54


Number = 1256
ans=4

6 5 2 1
1 2 5 6

number%10 = 6
number/10
125
number%10 = 5
number/10
12

number%10 = 2
number/10

1

Prime numbers 

17 --- Prime number
22 --- not prime number 

factorial = 10 
10*9*8*7*6...*1 = 

i=1;
fact;
num=5
while(i<=num)
{
	fact=fact*i;
	i++;
}

1-100 

Patterns 

1. row and column
2. 2 loops (nested loop)

    c=1 c=2   c=3     c=4      c=5	
r=1 1
r=2 1	1
r=3 1	1	1
r=4 1	1	1	1
r=5 1	1	1	1	1

__________________________________________________________________

*
*	*
*	*	*
*	*	*	*
*	*	*	*	*

___________________________________________________________________

1
2	2
3	3	3
4	4	4	4
5	5	5	5	5

_________________________________________________________________


25th Aug

Pattern ?

HW

5	5	5	5	5
4	4	4	4
3	3	3
2	2	
1


HW
1	1	1	1	1
2	2	2	2
3	3	3
4	4
5
5
4	4	
3	3	3
2	2	2	2
1	1	1	1	1

Hint row loop will be  1
	col = 2 with condition


name = INDIA

I
I	N
I	N	D
I	N	D	I
I	N	D	I	A

name[10]="INDIA"
Array = element always access thru index
I = name[0]
N = name[1]
D = name[2]


first step -->  nums , loops 2 (nested)


	for(row=1;row<=num;row++)
	{
		for(col=num;col>=row;col--)
		{
		
____________________

break , continue and go to 

break ? stop , break iteration

to break a loop based on condition

for(i=0;i<10;i++)
{
	if(i==5)
		break;
}

--> Continue will skip the current iteration and execute the next iteration
for(i=0;i<10;i++)
{
	if(i==5)
		continue;
	printf("%d",i);
}


27th Aug

break , continue ,goto 

--> menu driven program 

1. Addition
2. Subtraction
3. Multilication
4. Division
5. Exit



--> condition , loop , break , operators ,

task 1
+ Addition
- Subtraction
* Multilication
/ Division
& Exit

task 2
1. Count no of digit
2. Sum of all digit
3. Mulilication of digits
4. find total even and odd digits from given number
5. Exit


task 3 
prime numbers 
user enter 12 
It's is not prime number

user enter 23
It's a prime number

task4 
find prime number from 1 - 100

task 5
armstrong number 

153 = 3

1^3 = 1
5^3 = 125
3^3 = 27
153 

pow math 

array  ? collection , multiple values 

number1,number2,ans

multiple values store in single variable and have continue memory allocation 

number1,number2,num3,num4,num5

access elements from array in form of index 

index always starts from 0

29th Aug

Array ---> collection of elements 

declaration 
initilization 
iteration
index - numbers 
0-1
1-2
2-3
3-4
...
9-10

for(i=0,j=1;i<10;i++,j++)
{
	numbers[i]=i+1;
	//numbers[i]=j;
}

arrays 2 types single dimentional multidimentional 

int numbers[]={12,23,67,89};
int sum=0;
for(i=0;i<4;i++)
{
	sum=sum+numbers[i];
}
printf("%d",sum);


now we are accepting elements from user















	






